ggplot(data=kidney, aes(y=kidney[,i], x=count())) + geom_density()
library(ggplot2)
kidney <- read.csv("kindey stone urine analysis.csv", stringsAsFactors = T)
ggplot(data=kidney, aes(y=kidney[,i], x=count())) + geom_density()
ggplot(data=kidney, aes(y=kidney[,i])) + geom_density()
for (i in 1:6){
ggplot(data=kidney, aes(y=kidney[,i])) + geom_density()
}
for (i in 1:6){
ggplot(data=kidney, aes(y=kidney[,i])) + geom_density()
}
# ggplot(kidney, aes())
p
for (i in 1:6){
p <- ggplot(data=kidney, aes(y=kidney[,i])) + geom_density()
}
p
# ggplot(kidney, aes())
# ggplot(kidney, aes())
```
for (i in 1:6){
ggplot(data=kidney, aes(y=kidney[,i])) + geom_density()
}
# ggplot(kidney, aes())
for (i in 1:6){
ggplot(data=kidney, aes(y=kidney[,i])) + geom_density()
}
# ggplot(kidney, aes())
for (i in 1:6){
ggplot(data=kidney, aes(y=kidney[,i])) + geom_point()
}
# ggplot(kidney, aes())
for (i in 1:6){
ggplot(data=kidney, aes(y=kidney[,i])) + geom_point()
}
for (i in 1:ncol(kidney)){
ggplot(data=kidney, aes(y=kidney[,i])) + geom_point()
}
# ggplot(kidney, aes())
for (i in 1:ncol(kidney)){
print(ggplot(data=kidney, aes(y=kidney[,i])) + geom_point())
}
print(ggplot(data=kidney, aes(y=kidney[,i])) + geom_density())
for (i in 1:ncol(kidney)){
print(ggplot(data=kidney, aes(y=kidney[,i])) + geom_density())
sys.sleep(2)
}
par(mfrow = c(3,3))
for (i in 1:ncol(kidney)){
print(ggplot(data=kidney, aes(y=kidney[,i])) + geom_density())
sys.sleep(2)
}
# ggplot(kidney, aes())
```
par(mfrow = c(3,3))
for (i in 1:ncol(kidney)){
print(ggplot(data=kidney, aes(y=kidney[,i])) + geom_density())
}
# ggplot(kidney, aes())
ggplot(kidney, aes(kidney[,1])) + geom_density()
ggplot(kidney, aes(kidney[,1])) + geom_point()
ggplot(kidney, aes(y=kidney[,1])) + geom_point()
par(mfrow = c(3,3))
for (i in 1:6){
print(ggplot(data=kidney, aes(y=kidney[,i], x=target)) + geom_density())
}
par(mfrow = c(3,3))
for (i in 1:6){
print(ggplot(data=kidney, aes(y=kidney[,i], x=target)) + geom_point())
}
for (i in 1:6){
print(ggplot(data=kidney, aes(y=kidney[,i], x=target)) + geom_point())
}
kidney_summary <- kidney %>% group_by(target)
library(tidyverse)
kidney_summary <- kidney %>% group_by(target)
kidney_summary
View(kidney)
# A plot to quickly find the relationship of variables and their characteristics
summary(kidney)
plot(kidney)
plot(gravity, target)
plot(kidney$gravity, kidney$target)
par(mfrow=c(1,1))
plot(kidney$gravity, kidney$target)
boxplot(kidney$gravity, kidney$target)
boxplot(kidney$target, kidney$gravity)
boxplot(kidney$gravity)
print(ggplot(data=kidney, aes(y=kidney[,i], x=target)) + geom_box())
print(ggplot(data=kidney, aes(y=kidney[,i], x=target)) + geom_boxplot())
print(ggplot(data=kidney, aes(y=kidney[,i])) + geom_boxplot())
i <- 1:6
ggplot(data=kidney, aes(y=kidney[,i])) + geom_boxplot()
ggplot(kidney, aes(y=kidney[,1])) + geom_boxplot()
par(mfrow=c(3,3))
i <- 1:6
ggplot(data=kidney, aes(y=kidney[,i])) + geom_boxplot()
str(kidney[,5])
par(mfrow=c(3,3))
ggplot(data=kidney, aes(y=kidney[,1])) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,2])) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,3])) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,4])) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,5])) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,6])) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,1], x=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,1], group=target)) + geom_boxplot()
par(mfrow=c(3,3))
ggplot(data=kidney, aes(y=kidney[,1], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,2], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,3], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,4], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,5], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,6], group=target)) + geom_boxplot()
library(patchwork)
knitr::include_graphics(img/adaboost_information.png)
![Explanation on how AdaBoost works](adaboost_information.png)
knitr::include_graphics(adaboost_information.png)
knitr::include_graphics("adaboost_information.png")
# Chunk 1: setup
library(ggplot2)
library(tidyverse)
library(patchwork)
kidney <- read.csv("kindey stone urine analysis.csv", stringsAsFactors = T)
head(kidney)
str(kidney[,5])
# Helps to see the attributes of each characteristics (nums and ints only)
# Chunk 2: plots
plot(kidney)
# A plot to quickly find the relationship of variables and their characteristics
summary(kidney)
ggplot(data=kidney, aes(y=kidney[,1], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,2], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,3], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,4], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,5], group=target)) + geom_boxplot()
ggplot(data=kidney, aes(y=kidney[,6], group=target)) + geom_boxplot()
print(knitr::include_graphics("adaboost_information.png"))
knitr::include_graphics("adaboost_information.png")
![Explanation on how AdaBoost works](adaboost_information.png)
head(kidney)
probit_model <- glm(target ~
gravity + ph + osmo + cond + urea + calc,
family = binomial(link = "probit"),
data = kidney)
summary(probit_model)
corr(kidney)
corrplot::(kidney)
cor.test(kidney)
